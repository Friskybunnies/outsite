{"ast":null,"code":"var _jsxFileName = \"/Users/friskybunnies/outsite-locations/frontend/src/Places.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Listbox } from '@headlessui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst places = [{\n  id: 1,\n  name: 'Lisbon',\n  unavailable: false\n}, {\n  id: 2,\n  name: 'NYC',\n  unavailable: false\n}, {\n  id: 3,\n  name: 'Berlin',\n  unavailable: false\n}, {\n  id: 4,\n  name: 'London',\n  unavailable: true\n}, {\n  id: 5,\n  name: 'Rome',\n  unavailable: false\n}];\n\nfunction Dropdown() {\n  _s();\n\n  const [selectedPlace, setSelectedPlace] = useState(places[0]);\n  return /*#__PURE__*/_jsxDEV(Listbox, {\n    value: selectedPlace,\n    onChange: setSelectedPlace,\n    children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n      className: \"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm\",\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n      children: places.map(place => /*#__PURE__*/_jsxDEV(Listbox.Option, {\n        value: place,\n        disabled: place.unavailable,\n        children: place.name\n      }, place.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this)\n  /* <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n  {({ open }) => (\n      <>\n          <div className=\"mt-1 relative\">\n              <Listbox.Button\n                  className={\n                      'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm'\n                  }\n              >\n                  <span className=\"w-full inline-flex truncate\">\n                      <span className=\"truncate\">{selectedPlace?.wfContent?.name}</span>\n                  </span>\n                  <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                      <ChevronUpIcon\n                          className={`${open ? 'transform rotate-180' : ''\n                              } transition duration-500 h-5 w-5 text-gray-400`}\n                          aria-hidden=\"true\"\n                      />\n                  </span>\n              </Listbox.Button>\n              <Listbox.Options\n                  static\n                  className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                  {Object.keys(locationsByRegion).map((region) => (\n                      <LocationRegionGroup\n                          key={region}\n                          region={region}\n                          defaultOpen={selectedPlace?.region === region}\n                          locations={locationsByRegion[region]}\n                      />\n                  ))}\n              </Listbox.Options>\n          </div>\n      </>\n  )}\n  </Listbox> */\n  ;\n}\n\n_s(Dropdown, \"awRPni8YwKUcZoYcdRFtVpFWzdo=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/friskybunnies/outsite-locations/frontend/src/Places.js"],"names":["useState","Listbox","places","id","name","unavailable","Dropdown","selectedPlace","setSelectedPlace","map","place"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,MAAM,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,WAAW,EAAE;AAAtC,CADW,EAEX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,KAAf;AAAsBC,EAAAA,WAAW,EAAE;AAAnC,CAFW,EAGX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,WAAW,EAAE;AAAtC,CAHW,EAIX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,WAAW,EAAE;AAAtC,CAJW,EAKX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,WAAW,EAAE;AAApC,CALW,CAAf;;AAQA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAACE,MAAM,CAAC,CAAD,CAAP,CAAlD;AAEA,sBACI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEK,aAAhB;AAA+B,IAAA,QAAQ,EAAEC,gBAAzC;AAAA,4BACI,QAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,SAAS,EAAC,8MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD,CAAS,OAAT;AAAA,gBACKN,MAAM,CAACO,GAAP,CAAYC,KAAD,iBACR,QAAC,OAAD,CAAS,MAAT;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,QAAQ,EAAEA,KAAK,CAACL,WAHpB;AAAA,kBAKKK,KAAK,CAACN;AALX,SACSM,KAAK,CAACP,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDI;AAsDH;;GAzDQG,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { Listbox } from '@headlessui/react';\n\nconst places = [\n    { id: 1, name: 'Lisbon', unavailable: false },\n    { id: 2, name: 'NYC', unavailable: false },\n    { id: 3, name: 'Berlin', unavailable: false },\n    { id: 4, name: 'London', unavailable: true },\n    { id: 5, name: 'Rome', unavailable: false },\n]\n\nfunction Dropdown() {\n    const [selectedPlace, setSelectedPlace] = useState(places[0])\n\n    return (\n        <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm\">Select</Listbox.Button>\n            <Listbox.Options>\n                {places.map((place) => (\n                    <Listbox.Option\n                        key={place.id}\n                        value={place}\n                        disabled={place.unavailable}\n                    >\n                        {place.name}\n                    </Listbox.Option>\n                ))}\n            </Listbox.Options>\n        </Listbox>\n\n        /* <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n        {({ open }) => (\n            <>\n                <div className=\"mt-1 relative\">\n                    <Listbox.Button\n                        className={\n                            'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm'\n                        }\n                    >\n                        <span className=\"w-full inline-flex truncate\">\n                            <span className=\"truncate\">{selectedPlace?.wfContent?.name}</span>\n                        </span>\n                        <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                            <ChevronUpIcon\n                                className={`${open ? 'transform rotate-180' : ''\n                                    } transition duration-500 h-5 w-5 text-gray-400`}\n                                aria-hidden=\"true\"\n                            />\n                        </span>\n                    </Listbox.Button>\n                    <Listbox.Options\n                        static\n                        className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                    >\n                        {Object.keys(locationsByRegion).map((region) => (\n                            <LocationRegionGroup\n                                key={region}\n                                region={region}\n                                defaultOpen={selectedPlace?.region === region}\n                                locations={locationsByRegion[region]}\n                            />\n                        ))}\n                    </Listbox.Options>\n                </div>\n            </>\n        )}\n        </Listbox> */\n    )\n}\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}