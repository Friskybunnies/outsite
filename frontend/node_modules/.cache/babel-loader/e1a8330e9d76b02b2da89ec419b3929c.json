{"ast":null,"code":"var _jsxFileName = \"/Users/friskybunnies/outsite-locations/frontend/src/Places.js\";\nimport React, { Fragment } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Places(props) {\n  var _props$selectedPlace$;\n\n  const placeGroups = groupBy(props.locations, 'region');\n\n  const getSelectedPlace = e => {\n    props.onSelectedPlace(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Listbox, {\n      value: (_props$selectedPlace$ = props.selectedPlace.wfContent) === null || _props$selectedPlace$ === void 0 ? void 0 : _props$selectedPlace$.name,\n      onChange: getSelectedPlace,\n      children: ({\n        open\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n            className: \"w-full bg-white pl-3 border border-gray-300 rounded-md shadow-sm py-2 text-left cursor-pointer text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-full inline-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"\",\n                children: props.selectedPlaceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute inset-y-0 right-0 flex items-center pr-2\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                className: `${open ? 'transform rotate-180' : ''} transition duration-500 h-5 w-5 text-gray-400`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Transition, {\n            show: open,\n            leave: \"transition-opacity ease-in duration-150\",\n            leaveFrom: \"opacity-90\",\n            leaveTo: \"opacity-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n            className: \"absolute mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 overflow-auto text-sm\",\n            children: Object.keys(placeGroups).map(group => /*#__PURE__*/_jsxDEV(Disclosure, {\n              defaultOpen: false,\n              className: \"\",\n              children: ({\n                open\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Disclosure.Button, {\n                  className: \"flex text-left text-lg justify-between w-full px-4 py-2 text-gray-900\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: group\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                    className: `${open ? 'transform rotate-180' : ''} h-5 w-5`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Disclosure.Panel, {\n                  className: \"px-4 pb-2\",\n                  children: props.locations.filter(location => location.region === group).map(location => {\n                    return /*#__PURE__*/_jsxDEV(Listbox.Option, {\n                      className: ({\n                        active,\n                        selected\n                      }) => classNames(active ? 'cursor-pointer bg-gray-100' : 'cursor-default', 'relative py-1 pl-8 pr-4'),\n                      value: location,\n                      onClick: getSelectedPlace,\n                      children: ({\n                        selected\n                      }) => {\n                        var _location$wfContent, _location$wfContent2;\n\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex flex-col\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-left text-gray-900 text-base truncate transition-colors duration-200\",\n                              children: (_location$wfContent = location.wfContent) === null || _location$wfContent === void 0 ? void 0 : _location$wfContent.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 46,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: classNames('text-left text-gray-600 text-xs tracking-widest uppercase truncate'),\n                              children: (_location$wfContent2 = location.wfContent) === null || _location$wfContent2 === void 0 ? void 0 : _location$wfContent2.houseName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 49,\n                              columnNumber: 77\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 45,\n                            columnNumber: 73\n                          }, this), selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classNames('absolute inset-y-0 left-0 flex items-center pl-1 text-green'),\n                            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                              className: \"h-5 w-5\",\n                              \"aria-hidden\": \"true\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 64,\n                              columnNumber: 81\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 59,\n                            columnNumber: 77\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 44,\n                          columnNumber: 69\n                        }, this);\n                      }\n                    }, location.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 45\n              }, this)\n            }, group, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/friskybunnies/outsite-locations/frontend/src/Places.js"],"names":["React","Fragment","Disclosure","Listbox","Transition","CheckIcon","ChevronUpIcon","classNames","groupBy","Places","props","placeGroups","locations","getSelectedPlace","e","onSelectedPlace","selectedPlace","wfContent","name","open","selectedPlaceName","Object","keys","map","group","filter","location","region","active","selected","houseName","id"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\n\nfunction Places(props) {\n    const placeGroups = groupBy(props.locations, 'region');\n\n    const getSelectedPlace = (e) => {\n        props.onSelectedPlace(e);\n    }\n\n    return (\n        <div>\n            <Listbox value={props.selectedPlace.wfContent?.name} onChange={getSelectedPlace}>\n                {({ open }) => (\n                    <>\n                        <div className=\"mt-1 relative\">\n                            <Listbox.Button className='w-full bg-white pl-3 border border-gray-300 rounded-md shadow-sm py-2 text-left cursor-pointer text-sm'>\n                                <span className=\"w-full inline-flex\">\n                                    <span className=\"\">{props.selectedPlaceName}</span>\n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2\">\n                                    <ChevronUpIcon className={`${open ? 'transform rotate-180' : ''} transition duration-500 h-5 w-5 text-gray-400`} />\n                                </span>\n                            </Listbox.Button>\n                            <Transition show={open} leave=\"transition-opacity ease-in duration-150\" leaveFrom=\"opacity-90\" leaveTo=\"opacity-0\">\n                            </Transition>\n                            <Listbox.Options className=\"absolute mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 overflow-auto text-sm\">\n                                {Object.keys(placeGroups).map((group) => (\n                                    <Disclosure key={group} defaultOpen={false} className=\"\">\n                                        {({ open }) => (\n                                            <div>\n                                                <Disclosure.Button className=\"flex text-left text-lg justify-between w-full px-4 py-2 text-gray-900\">\n                                                    <span>{group}</span>\n                                                    <ChevronUpIcon className={`${open ? 'transform rotate-180' : ''} h-5 w-5`} />\n                                                </Disclosure.Button>\n                                                <Disclosure.Panel className=\"px-4 pb-2\">\n                                                    {props.locations.filter(location => location.region === group).map(location => {\n                                                        return (\n                                                            <Listbox.Option key={location.id} className={({ active, selected }) => classNames(active ? 'cursor-pointer bg-gray-100' : 'cursor-default', 'relative py-1 pl-8 pr-4')} value={location} onClick={getSelectedPlace}>\n                                                                {({ selected }) => (\n                                                                    <div>\n                                                                        <div className=\"flex flex-col\">\n                                                                            <span className='text-left text-gray-900 text-base truncate transition-colors duration-200'>\n                                                                                {location.wfContent?.name}\n                                                                            </span>\n                                                                            <span\n                                                                                className={classNames(\n                                                                                    'text-left text-gray-600 text-xs tracking-widest uppercase truncate'\n                                                                                )}\n                                                                            >\n                                                                                {location.wfContent?.houseName}\n                                                                            </span>\n                                                                        </div>\n\n                                                                        {selected ? (\n                                                                            <span\n                                                                                className={classNames(\n                                                                                    'absolute inset-y-0 left-0 flex items-center pl-1 text-green'\n                                                                                )}\n                                                                            >\n                                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                            </span>\n                                                                        ) : null}\n                                                                    </div>\n                                                                )}\n                                                            </Listbox.Option>\n                                                        )\n                                                    })}\n                                                </Disclosure.Panel>\n                                            </div>\n                                        )}\n                                    </Disclosure>\n\n                                ))}\n                            </Listbox.Options>\n                        </div>\n                    </>\n                )}\n            </Listbox>\n        </div>\n    )\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}