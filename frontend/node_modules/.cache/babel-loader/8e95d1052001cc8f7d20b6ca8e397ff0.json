{"ast":null,"code":"var _jsxFileName = \"/Users/friskybunnies/outsite-locations/frontend/src/Places.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Places(props) {\n  _s();\n\n  const [selectedPlace, setSelectedPlace] = useState(props.locations[0]);\n  /* const [cities, setCities] = useState([]); */\n\n  const placeGroups = groupBy(props.locations, 'region');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Listbox, {\n      value: selectedPlace,\n      onChange: setSelectedPlace,\n      children: ({\n        open\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n            className: 'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-full inline-flex truncate\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: selectedPlace\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                className: `${open ? 'transform rotate-180' : ''} transition duration-500 h-5 w-5 text-gray-400`,\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Transition, {\n            show: open,\n            leave: \"transition-opacity ease-in duration-100\",\n            leaveFrom: \"opacity-100\",\n            leaveTo: \"opacity-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n            className: \"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\",\n            children: Object.keys(placeGroups).map(group => /*#__PURE__*/_jsxDEV(Disclosure, {\n              defaultOpen: true,\n              as: \"div\",\n              className: \"mt-2\",\n              children: ({\n                open\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Disclosure.Button, {\n                  className: \"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: group\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                    className: `${open ? 'transform rotate-180' : ''} w-5 h-5`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Disclosure.Panel, {\n                  className: \"px-4 pb-2 text-gray-500\",\n                  children: props.locations.filter(location => location.region === group).map(location => {\n                    return location.name;\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)\n            }, group, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Places, \"Ff/ZgsjpT+8NytRSuVYo4VsT4d0=\");\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/friskybunnies/outsite-locations/frontend/src/Places.js"],"names":["React","Fragment","useState","Disclosure","Listbox","Transition","CheckIcon","ChevronUpIcon","classNames","groupBy","Places","props","selectedPlace","setSelectedPlace","locations","placeGroups","open","Object","keys","map","group","filter","location","region","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\n\nfunction Places(props) {\n    const [selectedPlace, setSelectedPlace] = useState(props.locations[0]);\n    /* const [cities, setCities] = useState([]); */\n    const placeGroups = groupBy(props.locations, 'region');\n\n    return (\n        <div>\n            <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n                {({ open }) => (\n                    <>\n                        <div className=\"mt-1 relative\">\n                            <Listbox.Button\n                                className={\n                                    'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm'\n                                }\n                            >\n                                <span className=\"w-full inline-flex truncate\">\n                                    <span className=\"truncate\">{selectedPlace}</span>\n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                    <ChevronUpIcon\n                                        className={`${open ? 'transform rotate-180' : ''\n                                            } transition duration-500 h-5 w-5 text-gray-400`}\n                                        aria-hidden=\"true\"\n                                    />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                show={open}\n                                leave=\"transition-opacity ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            ></Transition>\n                            <Listbox.Options\n                                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                            >\n                                {Object.keys(placeGroups).map((group) => (\n                                    <Disclosure key={group} defaultOpen={true} as=\"div\" className=\"mt-2\">\n                                        {({ open }) => (\n                                            <>\n                                                <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \">\n                                                    <span>{group}</span>\n                                                    <ChevronUpIcon className={`${open ? 'transform rotate-180' : ''} w-5 h-5`} />\n                                                </Disclosure.Button>\n                                                {/* {setCities(props.locations.filter(location => location.region === group))} */}\n                                                <Disclosure.Panel className=\"px-4 pb-2 text-gray-500\">\n                                                    {props.locations.filter(location => location.region === group).map(location => {\n                                                        return (\n                                                            location.name\n                                                        )\n                                                    })}\n\n                                                </Disclosure.Panel>\n                                            </>\n                                        )}\n                                    </Disclosure>\n\n                                ))}\n                            </Listbox.Options>\n                        </div>\n                    </>\n                )}\n            </Listbox>\n        </div>\n    )\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}