{"ast":null,"code":"var _jsxFileName = \"/Users/friskybunnies/outsite-locations/frontend/src/Places.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst places = [{\n  id: 1,\n  name: 'Lisbon',\n  unavailable: false\n}, {\n  id: 2,\n  name: 'NYC',\n  unavailable: false\n}, {\n  id: 3,\n  name: 'Berlin',\n  unavailable: false\n}, {\n  id: 4,\n  name: 'London',\n  unavailable: true\n}, {\n  id: 5,\n  name: 'Rome',\n  unavailable: false\n}];\n/* function groupBy(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n} */\n\nfunction Places(props) {\n  _s();\n\n  const [selectedPlace, setSelectedPlace] = useState(places[0]);\n  const placeGroups = groupBy(props.locations, 'region');\n  return (\n    /*#__PURE__*/\n\n    /* <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n        <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm\">Select</Listbox.Button>\n        <Listbox.Options>\n            {places.map((place) => (\n                <Listbox.Option\n                    key={place.id}\n                    value={place}\n                    disabled={place.unavailable}\n                >\n                    {place.name}\n                </Listbox.Option>\n            ))}\n        </Listbox.Options>\n    </Listbox> */\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Listbox, {\n        value: selectedPlace,\n        onChange: setSelectedPlace,\n        children: ({\n          open\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 relative\",\n            children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n              className: 'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"w-full inline-flex truncate\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"truncate\",\n                  children: selectedPlace === null || selectedPlace === void 0 ? void 0 : selectedPlace.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",\n                children: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                  className: `${open ? 'transform rotate-180' : ''} transition duration-500 h-5 w-5 text-gray-400`,\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Transition, {\n              leave: \"transition-opacity ease-in duration-100\",\n              leaveFrom: \"opacity-100\",\n              leaveTo: \"opacity-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n              static: true,\n              className: \"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\",\n              children: Object.keys(placeGroups).map(group => /*#__PURE__*/_jsxDEV(Disclosure, {\n                defaultOpen: true,\n                as: \"div\",\n                className: \"mt-2\",\n                children: ({\n                  open\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Disclosure.Button, {\n                    className: \"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: group\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                      className: `${open ? 'transform rotate-180' : ''} w-5 h-5`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Disclosure.Panel, {\n                    className: \"px-4 pb-2 text-gray-500\",\n                    children: props.locations.map(location => /*#__PURE__*/_jsxDEV(Listbox.Option, {\n                      className: ({\n                        active,\n                        selected\n                      }) => classNames(active ? 'cursor-pointer bg-gray-100' : 'cursor-default', 'select-none relative py-1 pl-8 pr-4'),\n                      value: location.id,\n                      children: ({\n                        selected,\n                        active\n                      }) => {\n                        var _location$wfContent, _location$wfContent2;\n\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex flex-col\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: classNames('text-gray-900 text-base truncate transition-colors duration-200'),\n                              children: (_location$wfContent = location.wfContent) === null || _location$wfContent === void 0 ? void 0 : _location$wfContent.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 103,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: classNames('text-gray-600 text-xxs tracking-widest uppercase truncate'),\n                              children: (_location$wfContent2 = location.wfContent) === null || _location$wfContent2 === void 0 ? void 0 : _location$wfContent2.houseName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 110,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 69\n                          }, this), selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classNames('absolute inset-y-0 left-0 flex items-center pl-1 text-outsite-green'),\n                            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                              className: \"h-5 w-5\",\n                              \"aria-hidden\": \"true\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 125,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 120,\n                            columnNumber: 73\n                          }, this) : null]\n                        }, void 0, true);\n                      }\n                    }, location.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Places, \"awRPni8YwKUcZoYcdRFtVpFWzdo=\");\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/friskybunnies/outsite-locations/frontend/src/Places.js"],"names":["React","Fragment","useState","Disclosure","Listbox","Transition","CheckIcon","ChevronUpIcon","classNames","groupBy","places","id","name","unavailable","Places","props","selectedPlace","setSelectedPlace","placeGroups","locations","open","Object","keys","map","group","location","active","selected","wfContent","houseName"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\n\nconst places = [\n    { id: 1, name: 'Lisbon', unavailable: false },\n    { id: 2, name: 'NYC', unavailable: false },\n    { id: 3, name: 'Berlin', unavailable: false },\n    { id: 4, name: 'London', unavailable: true },\n    { id: 5, name: 'Rome', unavailable: false },\n]\n\n/* function groupBy(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n} */\n\nfunction Places(props) {\n    const [selectedPlace, setSelectedPlace] = useState(places[0])\n    const placeGroups = groupBy(props.locations, 'region');\n\n    return (\n        /* <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm\">Select</Listbox.Button>\n            <Listbox.Options>\n                {places.map((place) => (\n                    <Listbox.Option\n                        key={place.id}\n                        value={place}\n                        disabled={place.unavailable}\n                    >\n                        {place.name}\n                    </Listbox.Option>\n                ))}\n            </Listbox.Options>\n        </Listbox> */\n        <div>\n            <Listbox value={selectedPlace} onChange={setSelectedPlace}>\n                {({ open }) => (\n                    <>\n                        <div className=\"mt-1 relative\">\n                            <Listbox.Button\n                                className={\n                                    'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm'\n                                }\n                            >\n                                <span className=\"w-full inline-flex truncate\">\n                                    <span className=\"truncate\">{selectedPlace?.name}</span>\n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                    <ChevronUpIcon\n                                        className={`${open ? 'transform rotate-180' : ''\n                                            } transition duration-500 h-5 w-5 text-gray-400`}\n                                        aria-hidden=\"true\"\n                                    />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n\n\n                                leave=\"transition-opacity ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            ></Transition>\n                            <Listbox.Options\n                                static\n                                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                            >\n                                {Object.keys(placeGroups).map((group) => (\n                                    <Disclosure defaultOpen={true} as=\"div\" className=\"mt-2\">\n                                        {({ open }) => (\n                                            <>\n                                                <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \">\n                                                    <span>{group}</span>\n                                                    <ChevronUpIcon className={`${open ? 'transform rotate-180' : ''} w-5 h-5`} />\n                                                </Disclosure.Button>\n                                                <Disclosure.Panel className=\"px-4 pb-2 text-gray-500\">\n                                                    {props.locations.map((location) => (\n                                                        <Listbox.Option\n                                                            key={location.id}\n                                                            className={({ active, selected }) =>\n                                                                classNames(\n                                                                    active ? 'cursor-pointer bg-gray-100' : 'cursor-default',\n                                                                    'select-none relative py-1 pl-8 pr-4'\n                                                                )\n                                                            }\n                                                            value={location.id}\n                                                        >\n                                                            {({ selected, active }) => (\n                                                                <>\n                                                                    <div className=\"flex flex-col\">\n                                                                        <span\n                                                                            className={classNames(\n                                                                                'text-gray-900 text-base truncate transition-colors duration-200'\n                                                                            )}\n                                                                        >\n                                                                            {location.wfContent?.name}\n                                                                        </span>\n                                                                        <span\n                                                                            className={classNames(\n                                                                                'text-gray-600 text-xxs tracking-widest uppercase truncate'\n                                                                            )}\n                                                                        >\n                                                                            {location.wfContent?.houseName}\n                                                                        </span>\n                                                                    </div>\n\n                                                                    {selected ? (\n                                                                        <span\n                                                                            className={classNames(\n                                                                                'absolute inset-y-0 left-0 flex items-center pl-1 text-outsite-green'\n                                                                            )}\n                                                                        >\n                                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                        </span>\n                                                                    ) : null}\n                                                                </>\n                                                            )}\n                                                        </Listbox.Option>\n                                                    ))}\n                                                </Disclosure.Panel>\n                                            </>\n                                        )}\n                                    </Disclosure>\n\n                                ))}\n                            </Listbox.Options>\n                        </div>\n                    </>\n                )}\n            </Listbox>\n        </div>\n    )\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}