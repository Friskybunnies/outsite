{"ast":null,"code":"var _jsxFileName = \"/Users/friskybunnies/outsite-locations/frontend/src/Places.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Places(props) {\n  /* const [selectedPlace, setSelectedPlace] = useState(\"Lisbon - Cais do Sodre\"); */\n  const placeGroups = groupBy(props.locations, 'region');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Listbox, {\n      value: props.selectedPlace,\n      onChange: props.setSelectedPlace,\n      children: ({\n        open\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n            className: 'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-full inline-flex truncate\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: props.selectedPlace\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                className: `${open ? 'transform rotate-180' : ''} transition duration-500 h-5 w-5 text-gray-400`,\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Transition, {\n            show: open,\n            leave: \"transition-opacity ease-in duration-100\",\n            leaveFrom: \"opacity-100\",\n            leaveTo: \"opacity-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n            className: \"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\",\n            children: Object.keys(placeGroups).map(group => /*#__PURE__*/_jsxDEV(Disclosure, {\n              defaultOpen: false,\n              as: \"div\",\n              className: \"mt-2\",\n              children: ({\n                open\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Disclosure.Button, {\n                  className: \"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: group\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                    className: `${open ? 'transform rotate-180' : ''} w-5 h-5`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Disclosure.Panel, {\n                  className: \"px-4 pb-2 text-gray-500\",\n                  children: props.locations.filter(location => location.region === group).map(location => {\n                    var _location$wfContent;\n\n                    return /*#__PURE__*/_jsxDEV(Listbox.Option, {\n                      className: ({\n                        active,\n                        selected\n                      }) => classNames(active ? 'cursor-pointer bg-gray-100' : 'cursor-default', 'select-none relative py-1 pl-8 pr-4'),\n                      value: (_location$wfContent = location.wfContent) === null || _location$wfContent === void 0 ? void 0 : _location$wfContent.name,\n                      onClick: e => props.setSelectedPlace(e.target),\n                      children: ({\n                        selected,\n                        active\n                      }) => {\n                        var _location$wfContent2, _location$wfContent3;\n\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex flex-col\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: classNames('text-gray-900 text-base truncate transition-colors duration-200'),\n                              children: (_location$wfContent2 = location.wfContent) === null || _location$wfContent2 === void 0 ? void 0 : _location$wfContent2.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 66,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: classNames('text-gray-600 text-xxs tracking-widest uppercase truncate'),\n                              children: (_location$wfContent3 = location.wfContent) === null || _location$wfContent3 === void 0 ? void 0 : _location$wfContent3.houseName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 73,\n                              columnNumber: 77\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 65,\n                            columnNumber: 73\n                          }, this), selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classNames('absolute inset-y-0 left-0 flex items-center pl-1 text-outsite-green'),\n                            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                              className: \"h-5 w-5\",\n                              \"aria-hidden\": \"true\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 88,\n                              columnNumber: 81\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 83,\n                            columnNumber: 77\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 64,\n                          columnNumber: 69\n                        }, this);\n                      }\n                    }, location.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)\n            }, group, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/friskybunnies/outsite-locations/frontend/src/Places.js"],"names":["React","Fragment","useState","Disclosure","Listbox","Transition","CheckIcon","ChevronUpIcon","classNames","groupBy","Places","props","placeGroups","locations","selectedPlace","setSelectedPlace","open","Object","keys","map","group","filter","location","region","active","selected","wfContent","name","e","target","houseName","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Disclosure, Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpIcon } from '@heroicons/react/solid';\nimport classNames from 'classnames';\nimport { groupBy } from 'lodash';\n\nfunction Places(props) {\n    /* const [selectedPlace, setSelectedPlace] = useState(\"Lisbon - Cais do Sodre\"); */\n    const placeGroups = groupBy(props.locations, 'region');\n\n    return (\n        <div>\n            <Listbox value={props.selectedPlace} onChange={props.setSelectedPlace}>\n                {({ open }) => (\n                    <>\n                        <div className=\"mt-1 relative\">\n                            <Listbox.Button\n                                className={\n                                    'relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-outsite-green focus:border-outsite-green sm:text-sm'\n                                }\n                            >\n                                <span className=\"w-full inline-flex truncate\">\n                                    <span className=\"truncate\">{props.selectedPlace}</span>\n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                    <ChevronUpIcon\n                                        className={`${open ? 'transform rotate-180' : ''\n                                            } transition duration-500 h-5 w-5 text-gray-400`}\n                                        aria-hidden=\"true\"\n                                    />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                show={open}\n                                leave=\"transition-opacity ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            ></Transition>\n                            <Listbox.Options\n                                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                            >\n                                {Object.keys(placeGroups).map((group) => (\n                                    <Disclosure key={group} defaultOpen={false} as=\"div\" className=\"mt-2\">\n                                        {({ open }) => (\n                                            <>\n                                                <Disclosure.Button className=\"flex justify-between w-full px-4 py-2 text-lg text-gray-900 text-left \">\n                                                    <span>{group}</span>\n                                                    <ChevronUpIcon className={`${open ? 'transform rotate-180' : ''} w-5 h-5`} />\n                                                </Disclosure.Button>\n                                                <Disclosure.Panel className=\"px-4 pb-2 text-gray-500\">\n                                                    {props.locations.filter(location => location.region === group).map(location => {\n                                                        return (\n                                                            <Listbox.Option\n                                                                key={location.id}\n                                                                className={({ active, selected }) =>\n                                                                    classNames(\n                                                                        active ? 'cursor-pointer bg-gray-100' : 'cursor-default',\n                                                                        'select-none relative py-1 pl-8 pr-4'\n                                                                    )\n                                                                }\n                                                                value={location.wfContent?.name} onClick={(e) => props.setSelectedPlace(e.target)}\n                                                            >\n                                                                {({ selected, active }) => (\n                                                                    <div>\n                                                                        <div className=\"flex flex-col\">\n                                                                            <span\n                                                                                className={classNames(\n                                                                                    'text-gray-900 text-base truncate transition-colors duration-200'\n                                                                                )}\n                                                                            >\n                                                                                {location.wfContent?.name}\n                                                                            </span>\n                                                                            <span\n                                                                                className={classNames(\n                                                                                    'text-gray-600 text-xxs tracking-widest uppercase truncate'\n                                                                                )}\n                                                                            >\n                                                                                {location.wfContent?.houseName}\n                                                                            </span>\n                                                                        </div>\n\n                                                                        {selected ? (\n                                                                            <span\n                                                                                className={classNames(\n                                                                                    'absolute inset-y-0 left-0 flex items-center pl-1 text-outsite-green'\n                                                                                )}\n                                                                            >\n                                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                            </span>\n                                                                        ) : null}\n                                                                    </div>\n                                                                )}\n                                                            </Listbox.Option>\n                                                        )\n                                                    })}\n                                                </Disclosure.Panel>\n                                            </>\n                                        )}\n                                    </Disclosure>\n\n                                ))}\n                            </Listbox.Options>\n                        </div>\n                    </>\n                )}\n            </Listbox>\n        </div>\n    )\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}